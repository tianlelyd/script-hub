{
  "url": "https://zed.dev/docs/ai/agent-settings.html",
  "title": "Agent Settings | Zed Code Editor Documentation",
  "content": "<main>\n\n<h1 id=\"agent-settings\"><a class=\"header\" href=\"#agent-settings\">Agent Settings</a></h1>\n<p>Learn about all the settings you can customize in Zed's Agent Panel.</p>\n<h2 id=\"model-settings\"><a class=\"header\" href=\"#model-settings\">Model Settings</a></h2>\n<h3 id=\"default-model\"><a class=\"header\" href=\"#default-model\">Default Model</a></h3>\n<p>If you're using <a href=\"./plans-and-usage.html\">Zed's hosted LLM service</a>, it sets <code>claude-sonnet-4</code> as the default model.\nBut if you're not subscribed to it or simply just want to change it, you can do it so either via the model dropdown in the Agent Panel's bottom-right corner or by manually editing the <code>default_model</code> object in your settings:</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"gpt-4o\"\n    }\n  }\n}\n</code></pre>\n<h3 id=\"feature-specific-models\"><a class=\"header\" href=\"#feature-specific-models\">Feature-specific Models</a></h3>\n<p>Assign distinct and specific models for the following AI-powered features in Zed:</p>\n<ul>\n<li>Thread summary model: Used for generating thread summaries</li>\n<li>Inline assistant model: Used for the inline assistant feature</li>\n<li>Commit message model: Used for generating Git commit messages</li>\n</ul>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"claude-sonnet-4\"\n    },\n    \"inline_assistant_model\": {\n      \"provider\": \"anthropic\",\n      \"model\": \"claude-3-5-sonnet\"\n    },\n    \"commit_message_model\": {\n      \"provider\": \"openai\",\n      \"model\": \"gpt-4o-mini\"\n    },\n    \"thread_summary_model\": {\n      \"provider\": \"google\",\n      \"model\": \"gemini-2.0-flash\"\n    }\n  }\n}\n</code></pre>\n<blockquote>\n<p>If a custom model isn't set for one of these features, they automatically fall back to using the default model.</p>\n</blockquote>\n<h3 id=\"alternative-assists\"><a class=\"header\" href=\"#alternative-assists\">Alternative Models for Inline Assists</a></h3>\n<p>The Inline Assist feature in particular has the capacity to perform multiple generations in parallel using different models.\nThat is possible by assigning more than one model to it, taking the configuration shown above one step further.</p>\n<p>When configured, the inline assist UI will surface controls to cycle between the outputs generated by each model.</p>\n<p>The models you specify here are always used in <em>addition</em> to your <a href=\"#default-model\">default model</a>.</p>\n<p>For example, the following configuration will generate two outputs for every assist.\nOne with Claude Sonnet 4 (the default model), and one with GPT-4o.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"claude-sonnet-4\"\n    },\n    \"inline_alternatives\": [\n      {\n        \"provider\": \"zed.dev\",\n        \"model\": \"gpt-4o\"\n      }\n    ]\n  }\n}\n</code></pre>\n<h3 id=\"model-temperature\"><a class=\"header\" href=\"#model-temperature\">Model Temperature</a></h3>\n<p>Specify a custom temperature for a provider and/or model:</p>\n<pre><code class=\"language-json\">\"model_parameters\": [\n  // To set parameters for all requests to OpenAI models:\n  {\n    \"provider\": \"openai\",\n    \"temperature\": 0.5\n  },\n  // To set parameters for all requests in general:\n  {\n    \"temperature\": 0\n  },\n  // To set parameters for a specific provider and model:\n  {\n    \"provider\": \"zed.dev\",\n    \"model\": \"claude-sonnet-4\",\n    \"temperature\": 1.0\n  }\n],\n</code></pre>\n<h2 id=\"agent-panel-settings\"><a class=\"header\" href=\"#agent-panel-settings\">Agent Panel Settings</a></h2>\n<p>Note that some of these settings are also surfaced in the Agent Panel's settings UI, which you can access either via the <code>agent: open settings</code> action or by the dropdown menu on the top-right corner of the panel.</p>\n<h3 id=\"default-view\"><a class=\"header\" href=\"#default-view\">Default View</a></h3>\n<p>Use the <code>default_view</code> setting to change the default view of the Agent Panel.\nYou can choose between <code>thread</code> (the default) and <code>text_thread</code>:</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"default_view\": \"text_thread\"\n  }\n}\n</code></pre>\n<h3 id=\"auto-run-commands\"><a class=\"header\" href=\"#auto-run-commands\">Auto-run Commands</a></h3>\n<p>Control whether you want to allow the agent to run commands without asking you for permission.\nThe default value is <code>false</code>.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"always_allow_tool_actions\": true\n  }\n}\n</code></pre>\n<blockquote>\n<p>This setting is available via the Agent Panel's settings UI.</p>\n</blockquote>\n<h3 id=\"single-file-review\"><a class=\"header\" href=\"#single-file-review\">Single-file Review</a></h3>\n<p>Control whether you want to see review actions (accept &amp; reject) in single buffers after the agent is done performing edits.\nThe default value is <code>false</code>.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"single_file_review\": true\n  }\n}\n</code></pre>\n<p>When set to false, these controls are only available in the multibuffer review tab.</p>\n<blockquote>\n<p>This setting is available via the Agent Panel's settings UI.</p>\n</blockquote>\n<h3 id=\"sound-notification\"><a class=\"header\" href=\"#sound-notification\">Sound Notification</a></h3>\n<p>Control whether you want to hear a notification sound when the agent is done generating changes or needs your input.\nThe default value is <code>false</code>.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"play_sound_when_agent_done\": true\n  }\n}\n</code></pre>\n<blockquote>\n<p>This setting is available via the Agent Panel's settings UI.</p>\n</blockquote>\n<h3 id=\"modifier-to-send\"><a class=\"header\" href=\"#modifier-to-send\">Modifier to Send</a></h3>\n<p>Make a modifier (<code>cmd</code> on macOS, <code>ctrl</code> on Linux) required to send messages.\nThis is encouraged for more thoughtful prompt crafting.\nThe default value is <code>false</code>.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"use_modifier_to_send\": true\n  }\n}\n</code></pre>\n<blockquote>\n<p>This setting is available via the Agent Panel's settings UI.</p>\n</blockquote>\n<h3 id=\"edit-card\"><a class=\"header\" href=\"#edit-card\">Edit Card</a></h3>\n<p>Use the <code>expand_edit_card</code> setting to control whether edit cards show the full diff in the Agent Panel.\nIt is set to <code>true</code> by default, but if set to false, the card's height is capped to a certain number of lines, requiring a click to be expanded.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"expand_edit_card\": false\n  }\n}\n</code></pre>\n<h3 id=\"terminal-card\"><a class=\"header\" href=\"#terminal-card\">Terminal Card</a></h3>\n<p>Use the <code>expand_terminal_card</code> setting to control whether terminal cards show the command output in the Agent Panel.\nIt is set to <code>true</code> by default, but if set to false, the card will be fully collapsed even while the command is running, requiring a click to be expanded.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"expand_terminal_card\": false\n  }\n}\n</code></pre>\n<h3 id=\"feedback-controls\"><a class=\"header\" href=\"#feedback-controls\">Feedback Controls</a></h3>\n<p>Control whether you want to see the thumbs up/down buttons to give Zed feedback about the agent's performance.\nThe default value is <code>true</code>.</p>\n<pre><code class=\"language-json\">{\n  \"agent\": {\n    \"enable_feedback\": false\n  }\n}\n</code></pre>\n\n</main>",
  "content_text": "Agent Settings\nLearn about all the settings you can customize in Zed's Agent Panel.\nModel Settings\nDefault Model\nIf you're using Zed's hosted LLM service, it sets claude-sonnet-4 as the default model.\nBut if you're not subscribed to it or simply just want to change it, you can do it so either via the model dropdown in the Agent Panel's bottom-right corner or by manually editing the default_model object in your settings:\n{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"gpt-4o\"\n    }\n  }\n}\n\nFeature-specific Models\nAssign distinct and specific models for the following AI-powered features in Zed:\n\nThread summary model: Used for generating thread summaries\nInline assistant model: Used for the inline assistant feature\nCommit message model: Used for generating Git commit messages\n\n{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"claude-sonnet-4\"\n    },\n    \"inline_assistant_model\": {\n      \"provider\": \"anthropic\",\n      \"model\": \"claude-3-5-sonnet\"\n    },\n    \"commit_message_model\": {\n      \"provider\": \"openai\",\n      \"model\": \"gpt-4o-mini\"\n    },\n    \"thread_summary_model\": {\n      \"provider\": \"google\",\n      \"model\": \"gemini-2.0-flash\"\n    }\n  }\n}\n\n\nIf a custom model isn't set for one of these features, they automatically fall back to using the default model.\n\nAlternative Models for Inline Assists\nThe Inline Assist feature in particular has the capacity to perform multiple generations in parallel using different models.\nThat is possible by assigning more than one model to it, taking the configuration shown above one step further.\nWhen configured, the inline assist UI will surface controls to cycle between the outputs generated by each model.\nThe models you specify here are always used in addition to your default model.\nFor example, the following configuration will generate two outputs for every assist.\nOne with Claude Sonnet 4 (the default model), and one with GPT-4o.\n{\n  \"agent\": {\n    \"default_model\": {\n      \"provider\": \"zed.dev\",\n      \"model\": \"claude-sonnet-4\"\n    },\n    \"inline_alternatives\": [\n      {\n        \"provider\": \"zed.dev\",\n        \"model\": \"gpt-4o\"\n      }\n    ]\n  }\n}\n\nModel Temperature\nSpecify a custom temperature for a provider and/or model:\n\"model_parameters\": [\n  // To set parameters for all requests to OpenAI models:\n  {\n    \"provider\": \"openai\",\n    \"temperature\": 0.5\n  },\n  // To set parameters for all requests in general:\n  {\n    \"temperature\": 0\n  },\n  // To set parameters for a specific provider and model:\n  {\n    \"provider\": \"zed.dev\",\n    \"model\": \"claude-sonnet-4\",\n    \"temperature\": 1.0\n  }\n],\n\nAgent Panel Settings\nNote that some of these settings are also surfaced in the Agent Panel's settings UI, which you can access either via the agent: open settings action or by the dropdown menu on the top-right corner of the panel.\nDefault View\nUse the default_view setting to change the default view of the Agent Panel.\nYou can choose between thread (the default) and text_thread:\n{\n  \"agent\": {\n    \"default_view\": \"text_thread\"\n  }\n}\n\nAuto-run Commands\nControl whether you want to allow the agent to run commands without asking you for permission.\nThe default value is false.\n{\n  \"agent\": {\n    \"always_allow_tool_actions\": true\n  }\n}\n\n\nThis setting is available via the Agent Panel's settings UI.\n\nSingle-file Review\nControl whether you want to see review actions (accept & reject) in single buffers after the agent is done performing edits.\nThe default value is false.\n{\n  \"agent\": {\n    \"single_file_review\": true\n  }\n}\n\nWhen set to false, these controls are only available in the multibuffer review tab.\n\nThis setting is available via the Agent Panel's settings UI.\n\nSound Notification\nControl whether you want to hear a notification sound when the agent is done generating changes or needs your input.\nThe default value is false.\n{\n  \"agent\": {\n    \"play_sound_when_agent_done\": true\n  }\n}\n\n\nThis setting is available via the Agent Panel's settings UI.\n\nModifier to Send\nMake a modifier (cmd on macOS, ctrl on Linux) required to send messages.\nThis is encouraged for more thoughtful prompt crafting.\nThe default value is false.\n{\n  \"agent\": {\n    \"use_modifier_to_send\": true\n  }\n}\n\n\nThis setting is available via the Agent Panel's settings UI.\n\nEdit Card\nUse the expand_edit_card setting to control whether edit cards show the full diff in the Agent Panel.\nIt is set to true by default, but if set to false, the card's height is capped to a certain number of lines, requiring a click to be expanded.\n{\n  \"agent\": {\n    \"expand_edit_card\": false\n  }\n}\n\nTerminal Card\nUse the expand_terminal_card setting to control whether terminal cards show the command output in the Agent Panel.\nIt is set to true by default, but if set to false, the card will be fully collapsed even while the command is running, requiring a click to be expanded.\n{\n  \"agent\": {\n    \"expand_terminal_card\": false\n  }\n}\n\nFeedback Controls\nControl whether you want to see the thumbs up/down buttons to give Zed feedback about the agent's performance.\nThe default value is true.\n{\n  \"agent\": {\n    \"enable_feedback\": false\n  }\n}",
  "nav_structure": [
    {
      "text": "Getting Started",
      "href": "../getting-started.html"
    },
    {
      "text": "Getting Started",
      "href": "../getting-started.html"
    },
    {
      "text": "System Requirements",
      "href": "../system-requirements.html"
    },
    {
      "text": "Accounts",
      "href": "../accounts.html"
    },
    {
      "text": "Linux",
      "href": "../linux.html"
    },
    {
      "text": "Windows",
      "href": "../windows.html"
    },
    {
      "text": "Telemetry",
      "href": "../telemetry.html"
    },
    {
      "text": "Workspace Persistence",
      "href": "../workspace-persistence.html"
    },
    {
      "text": "Additional Learning Materials",
      "href": "../additional-learning-materials.html"
    },
    {
      "text": "Configuring Zed",
      "href": "../configuring-zed.html"
    },
    {
      "text": "Configuring Zed",
      "href": "../configuring-zed.html"
    },
    {
      "text": "Configuring Languages",
      "href": "../configuring-languages.html"
    },
    {
      "text": "Key bindings",
      "href": "../key-bindings.html"
    },
    {
      "text": "All Actions",
      "href": "../all-actions.html"
    },
    {
      "text": "Snippets",
      "href": "../snippets.html"
    },
    {
      "text": "Themes",
      "href": "../themes.html"
    },
    {
      "text": "Icon Themes",
      "href": "../icon-themes.html"
    },
    {
      "text": "Visual Customization",
      "href": "../visual-customization.html"
    },
    {
      "text": "Vim Mode",
      "href": "../vim.html"
    },
    {
      "text": "Helix Mode",
      "href": "../helix.html"
    },
    {
      "text": "Multibuffers",
      "href": "../multibuffers.html"
    },
    {
      "text": "Multibuffers",
      "href": "../multibuffers.html"
    },
    {
      "text": "Outline Panel",
      "href": "../outline-panel.html"
    },
    {
      "text": "Code Completions",
      "href": "../completions.html"
    },
    {
      "text": "Channels",
      "href": "../channels.html"
    },
    {
      "text": "Collaboration",
      "href": "../collaboration.html"
    },
    {
      "text": "Git",
      "href": "../git.html"
    },
    {
      "text": "Debugger",
      "href": "../debugger.html"
    },
    {
      "text": "Diagnostics",
      "href": "../diagnostics.html"
    },
    {
      "text": "Tasks",
      "href": "../tasks.html"
    },
    {
      "text": "Remote Development",
      "href": "../remote-development.html"
    },
    {
      "text": "Environment Variables",
      "href": "../environment.html"
    },
    {
      "text": "REPL",
      "href": "../repl.html"
    },
    {
      "text": "Overview",
      "href": "../ai/overview.html"
    },
    {
      "text": "Overview",
      "href": "../ai/overview.html"
    },
    {
      "text": "Agent Panel",
      "href": "../ai/agent-panel.html"
    },
    {
      "text": "Tools",
      "href": "../ai/tools.html"
    },
    {
      "text": "External Agents",
      "href": "../ai/external-agents.html"
    },
    {
      "text": "Inline Assistant",
      "href": "../ai/inline-assistant.html"
    },
    {
      "text": "Edit Prediction",
      "href": "../ai/edit-prediction.html"
    },
    {
      "text": "Text Threads",
      "href": "../ai/text-threads.html"
    },
    {
      "text": "Rules",
      "href": "../ai/rules.html"
    },
    {
      "text": "Model Context Protocol",
      "href": "../ai/mcp.html"
    },
    {
      "text": "Configuration",
      "href": "../ai/configuration.html"
    },
    {
      "text": "LLM Providers",
      "href": "../ai/llm-providers.html"
    },
    {
      "text": "Agent Settings",
      "href": "../ai/agent-settings.html"
    },
    {
      "text": "Subscription",
      "href": "../ai/subscription.html"
    },
    {
      "text": "Plans and Usage",
      "href": "../ai/plans-and-usage.html"
    },
    {
      "text": "Billing",
      "href": "../ai/billing.html"
    },
    {
      "text": "Models",
      "href": "../ai/models.html"
    },
    {
      "text": "Privacy and Security",
      "href": "../ai/privacy-and-security.html"
    },
    {
      "text": "AI Improvement",
      "href": "../ai/ai-improvement.html"
    },
    {
      "text": "Overview",
      "href": "../extensions.html"
    },
    {
      "text": "Overview",
      "href": "../extensions.html"
    },
    {
      "text": "Installing Extensions",
      "href": "../extensions/installing-extensions.html"
    },
    {
      "text": "Developing Extensions",
      "href": "../extensions/developing-extensions.html"
    },
    {
      "text": "Language Extensions",
      "href": "../extensions/languages.html"
    },
    {
      "text": "Debugger Extensions",
      "href": "../extensions/debugger-extensions.html"
    },
    {
      "text": "Theme Extensions",
      "href": "../extensions/themes.html"
    },
    {
      "text": "Icon Theme Extensions",
      "href": "../extensions/icon-themes.html"
    },
    {
      "text": "Slash Command Extensions",
      "href": "../extensions/slash-commands.html"
    },
    {
      "text": "MCP Server Extensions",
      "href": "../extensions/mcp-extensions.html"
    },
    {
      "text": "All Languages",
      "href": "../languages.html"
    },
    {
      "text": "All Languages",
      "href": "../languages.html"
    },
    {
      "text": "Ansible",
      "href": "../languages/ansible.html"
    },
    {
      "text": "AsciiDoc",
      "href": "../languages/asciidoc.html"
    },
    {
      "text": "Astro",
      "href": "../languages/astro.html"
    },
    {
      "text": "Bash",
      "href": "../languages/bash.html"
    },
    {
      "text": "Biome",
      "href": "../languages/biome.html"
    },
    {
      "text": "C",
      "href": "../languages/c.html"
    },
    {
      "text": "C++",
      "href": "../languages/cpp.html"
    },
    {
      "text": "C#",
      "href": "../languages/csharp.html"
    },
    {
      "text": "Clojure",
      "href": "../languages/clojure.html"
    },
    {
      "text": "CSS",
      "href": "../languages/css.html"
    },
    {
      "text": "Dart",
      "href": "../languages/dart.html"
    },
    {
      "text": "Deno",
      "href": "../languages/deno.html"
    },
    {
      "text": "Diff",
      "href": "../languages/diff.html"
    },
    {
      "text": "Docker",
      "href": "../languages/docker.html"
    },
    {
      "text": "Elixir",
      "href": "../languages/elixir.html"
    },
    {
      "text": "Elm",
      "href": "../languages/elm.html"
    },
    {
      "text": "Emmet",
      "href": "../languages/emmet.html"
    },
    {
      "text": "Erlang",
      "href": "../languages/erlang.html"
    },
    {
      "text": "Fish",
      "href": "../languages/fish.html"
    },
    {
      "text": "GDScript",
      "href": "../languages/gdscript.html"
    },
    {
      "text": "Gleam",
      "href": "../languages/gleam.html"
    },
    {
      "text": "GLSL",
      "href": "../languages/glsl.html"
    },
    {
      "text": "Go",
      "href": "../languages/go.html"
    },
    {
      "text": "Groovy",
      "href": "../languages/groovy.html"
    },
    {
      "text": "Haskell",
      "href": "../languages/haskell.html"
    },
    {
      "text": "Helm",
      "href": "../languages/helm.html"
    },
    {
      "text": "HTML",
      "href": "../languages/html.html"
    },
    {
      "text": "Java",
      "href": "../languages/java.html"
    },
    {
      "text": "JavaScript",
      "href": "../languages/javascript.html"
    },
    {
      "text": "Julia",
      "href": "../languages/julia.html"
    },
    {
      "text": "JSON",
      "href": "../languages/json.html"
    },
    {
      "text": "Jsonnet",
      "href": "../languages/jsonnet.html"
    },
    {
      "text": "Kotlin",
      "href": "../languages/kotlin.html"
    },
    {
      "text": "Lua",
      "href": "../languages/lua.html"
    },
    {
      "text": "Luau",
      "href": "../languages/luau.html"
    },
    {
      "text": "Makefile",
      "href": "../languages/makefile.html"
    },
    {
      "text": "Markdown",
      "href": "../languages/markdown.html"
    },
    {
      "text": "Nim",
      "href": "../languages/nim.html"
    },
    {
      "text": "OCaml",
      "href": "../languages/ocaml.html"
    },
    {
      "text": "PHP",
      "href": "../languages/php.html"
    },
    {
      "text": "PowerShell",
      "href": "../languages/powershell.html"
    },
    {
      "text": "Prisma",
      "href": "../languages/prisma.html"
    },
    {
      "text": "Proto",
      "href": "../languages/proto.html"
    },
    {
      "text": "PureScript",
      "href": "../languages/purescript.html"
    },
    {
      "text": "Python",
      "href": "../languages/python.html"
    },
    {
      "text": "R",
      "href": "../languages/r.html"
    },
    {
      "text": "Rego",
      "href": "../languages/rego.html"
    },
    {
      "text": "ReStructuredText",
      "href": "../languages/rst.html"
    },
    {
      "text": "Racket",
      "href": "../languages/racket.html"
    },
    {
      "text": "Roc",
      "href": "../languages/roc.html"
    },
    {
      "text": "Ruby",
      "href": "../languages/ruby.html"
    },
    {
      "text": "Rust",
      "href": "../languages/rust.html"
    },
    {
      "text": "Scala",
      "href": "../languages/scala.html"
    },
    {
      "text": "Scheme",
      "href": "../languages/scheme.html"
    },
    {
      "text": "Shell Script",
      "href": "../languages/sh.html"
    },
    {
      "text": "SQL",
      "href": "../languages/sql.html"
    },
    {
      "text": "Svelte",
      "href": "../languages/svelte.html"
    },
    {
      "text": "Swift",
      "href": "../languages/swift.html"
    },
    {
      "text": "Tailwind CSS",
      "href": "../languages/tailwindcss.html"
    },
    {
      "text": "Terraform",
      "href": "../languages/terraform.html"
    },
    {
      "text": "TOML",
      "href": "../languages/toml.html"
    },
    {
      "text": "TypeScript",
      "href": "../languages/typescript.html"
    },
    {
      "text": "Uiua",
      "href": "../languages/uiua.html"
    },
    {
      "text": "Vue",
      "href": "../languages/vue.html"
    },
    {
      "text": "XML",
      "href": "../languages/xml.html"
    },
    {
      "text": "YAML",
      "href": "../languages/yaml.html"
    },
    {
      "text": "Yara",
      "href": "../languages/yara.html"
    },
    {
      "text": "Yarn",
      "href": "../languages/yarn.html"
    },
    {
      "text": "Zig",
      "href": "../languages/zig.html"
    },
    {
      "text": "Developing Zed",
      "href": "../development.html"
    },
    {
      "text": "Developing Zed",
      "href": "../development.html"
    },
    {
      "text": "macOS",
      "href": "../development/macos.html"
    },
    {
      "text": "Linux",
      "href": "../development/linux.html"
    },
    {
      "text": "Windows",
      "href": "../development/windows.html"
    },
    {
      "text": "FreeBSD",
      "href": "../development/freebsd.html"
    },
    {
      "text": "Local Collaboration",
      "href": "../development/local-collaboration.html"
    },
    {
      "text": "Using Debuggers",
      "href": "../development/debuggers.html"
    },
    {
      "text": "Glossary",
      "href": "../development/glossary.html"
    },
    {
      "text": "Release Process",
      "href": "../development/releases.html"
    },
    {
      "text": "Debugging Crashes",
      "href": "../development/debugging-crashes.html"
    }
  ],
  "page_toc": [],
  "scraped_at": "2025-09-06 14:12:28"
}