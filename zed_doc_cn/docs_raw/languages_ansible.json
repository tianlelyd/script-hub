{
  "url": "https://zed.dev/docs/languages/ansible.html",
  "title": "Ansible | Zed Code Editor Documentation",
  "content": "<main>\n\n<h1 id=\"ansible\"><a class=\"header\" href=\"#ansible\">Ansible</a></h1>\n<p>Support for Ansible in Zed is provided via a community-maintained <a href=\"https://github.com/kartikvashistha/zed-ansible\">Ansible extension</a>.</p>\n<ul>\n<li>Tree-sitter: <a href=\"https://github.com/zed-industries/tree-sitter-yaml\">zed-industries/tree-sitter-yaml</a></li>\n<li>Language Server: <a href=\"https://github.com/ansible/vscode-ansible/tree/main/packages/ansible-language-server\">ansible/vscode-ansible</a></li>\n</ul>\n<h2 id=\"setup\"><a class=\"header\" href=\"#setup\">Setup</a></h2>\n<h3 id=\"file-detection\"><a class=\"header\" href=\"#file-detection\">File detection</a></h3>\n<p>To avoid mishandling non-Ansible YAML files, the Ansible Language is not associated with any file extensions by default. To change this behavior you can add a <code>\"file_types\"</code> section to Zed settings inside your project (<code>.zed/settings.json</code>) or your Zed user settings (<code>~/.config/zed/settings.json</code>) to match your folder/naming conventions. For example:</p>\n<pre><code class=\"language-json\">\"file_types\": {\n    \"Ansible\": [\n      \"**.ansible.yml\",\n      \"**.ansible.yaml\",\n      \"**/defaults/*.yml\",\n      \"**/defaults/*.yaml\",\n      \"**/meta/*.yml\",\n      \"**/meta/*.yaml\",\n      \"**/tasks/*.yml\",\n      \"**/tasks/*.yaml\",\n      \"**/handlers/*.yml\",\n      \"**/handlers/*.yaml\",\n      \"**/group_vars/*.yml\",\n      \"**/group_vars/*.yaml\",\n      \"**/host_vars/*.yml\",\n      \"**/host_vars/*.yaml\",\n      \"**/playbooks/*.yml\",\n      \"**/playbooks/*.yaml\",\n      \"**playbook*.yml\",\n      \"**playbook*.yaml\"\n    ]\n  }\n</code></pre>\n<p>Feel free to modify this list as per your needs.</p>\n<h4 id=\"inventory\"><a class=\"header\" href=\"#inventory\">Inventory</a></h4>\n<p>If your inventory file is in the YAML format, you can either:</p>\n<ul>\n<li>Append the <code>ansible-lint</code> inventory json schema to it via the following comment at the top of your inventory file:</li>\n</ul>\n<pre><code class=\"language-yml\"># yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/inventory.json\n</code></pre>\n<ul>\n<li>Or configure the yaml language server settings to set this schema for all your inventory files, that match your inventory pattern, under your Zed settings (<a href=\"https://zed.dev/docs/languages/yaml\">ref</a>):</li>\n</ul>\n<pre><code class=\"language-json\">\"lsp\": {\n    \"yaml-language-server\": {\n      \"settings\": {\n        \"yaml\": {\n          \"schemas\": {\n            \"https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/inventory.json\": [\n              \"./inventory/*.yaml\",\n              \"hosts.yml\",\n            ]\n          }\n        }\n      }\n    }\n},\n</code></pre>\n<h3 id=\"lsp-configuration\"><a class=\"header\" href=\"#lsp-configuration\">LSP Configuration</a></h3>\n<p>By default, the following default config is passed to the Ansible language server. It conveniently mirrors the defaults set by <a href=\"https://github.com/neovim/nvim-lspconfig/blob/03bc581e05e81d33808b42b2d7e76d70adb3b595/lua/lspconfig/configs/ansiblels.lua\">nvim-lspconfig</a> for the Ansible language server:</p>\n<pre><code class=\"language-json\">{\n  \"ansible\": {\n    \"ansible\": {\n      \"path\": \"ansible\"\n    },\n    \"executionEnvironment\": {\n      \"enabled\": false\n    },\n    \"python\": {\n      \"interpreterPath\": \"python3\"\n    },\n    \"validation\": {\n      \"enabled\": true,\n      \"lint\": {\n        \"enabled\": true,\n        \"path\": \"ansible-lint\"\n      }\n    }\n  }\n}\n</code></pre>\n<blockquote>\n<p>[!NOTE]\nIn order for linting to work, ensure that <code>ansible-lint</code> is installed and discoverable on your PATH</p>\n</blockquote>\n<p>When desired, any of the above default settings can be overridden under the <code>\"lsp\"</code> section of your Zed settings file. For example:</p>\n<pre><code class=\"language-json\">\"lsp\": {\n  // Note, the Zed Ansible extension prefixes all settings with `ansible`\n  // so instead of using `ansible.ansible.path` use `ansible.path`.\n  \"ansible-language-server\": {\n    \"settings\": {\n      \"ansible\": {\n        \"path\": \"ansible\"\n      },\n      \"executionEnvironment\": {\n        \"enabled\": false\n      },\n      \"python\": {\n        \"interpreterPath\": \"python3\"\n      },\n      \"validation\": {\n        \"enabled\": false, // disable validation\n        \"lint\": {\n          \"enabled\": false, // disable ansible-lint\n          \"path\": \"ansible-lint\"\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>A full list of options/settings, that can be passed to the server, can be found at the project's page <a href=\"https://github.com/ansible/vscode-ansible/blob/5a89836d66d470fb9d20e7ea8aa2af96f12f61fb/docs/als/settings.md\">here</a>.\nFeel free to modify option values as needed.</p>\n\n</main>",
  "content_text": "Ansible\nSupport for Ansible in Zed is provided via a community-maintained Ansible extension.\n\nTree-sitter: zed-industries/tree-sitter-yaml\nLanguage Server: ansible/vscode-ansible\n\nSetup\nFile detection\nTo avoid mishandling non-Ansible YAML files, the Ansible Language is not associated with any file extensions by default. To change this behavior you can add a \"file_types\" section to Zed settings inside your project (.zed/settings.json) or your Zed user settings (~/.config/zed/settings.json) to match your folder/naming conventions. For example:\n\"file_types\": {\n    \"Ansible\": [\n      \"**.ansible.yml\",\n      \"**.ansible.yaml\",\n      \"**/defaults/*.yml\",\n      \"**/defaults/*.yaml\",\n      \"**/meta/*.yml\",\n      \"**/meta/*.yaml\",\n      \"**/tasks/*.yml\",\n      \"**/tasks/*.yaml\",\n      \"**/handlers/*.yml\",\n      \"**/handlers/*.yaml\",\n      \"**/group_vars/*.yml\",\n      \"**/group_vars/*.yaml\",\n      \"**/host_vars/*.yml\",\n      \"**/host_vars/*.yaml\",\n      \"**/playbooks/*.yml\",\n      \"**/playbooks/*.yaml\",\n      \"**playbook*.yml\",\n      \"**playbook*.yaml\"\n    ]\n  }\n\nFeel free to modify this list as per your needs.\nInventory\nIf your inventory file is in the YAML format, you can either:\n\nAppend the ansible-lint inventory json schema to it via the following comment at the top of your inventory file:\n\n# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/inventory.json\n\n\nOr configure the yaml language server settings to set this schema for all your inventory files, that match your inventory pattern, under your Zed settings (ref):\n\n\"lsp\": {\n    \"yaml-language-server\": {\n      \"settings\": {\n        \"yaml\": {\n          \"schemas\": {\n            \"https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/inventory.json\": [\n              \"./inventory/*.yaml\",\n              \"hosts.yml\",\n            ]\n          }\n        }\n      }\n    }\n},\n\nLSP Configuration\nBy default, the following default config is passed to the Ansible language server. It conveniently mirrors the defaults set by nvim-lspconfig for the Ansible language server:\n{\n  \"ansible\": {\n    \"ansible\": {\n      \"path\": \"ansible\"\n    },\n    \"executionEnvironment\": {\n      \"enabled\": false\n    },\n    \"python\": {\n      \"interpreterPath\": \"python3\"\n    },\n    \"validation\": {\n      \"enabled\": true,\n      \"lint\": {\n        \"enabled\": true,\n        \"path\": \"ansible-lint\"\n      }\n    }\n  }\n}\n\n\n[!NOTE]\nIn order for linting to work, ensure that ansible-lint is installed and discoverable on your PATH\n\nWhen desired, any of the above default settings can be overridden under the \"lsp\" section of your Zed settings file. For example:\n\"lsp\": {\n  // Note, the Zed Ansible extension prefixes all settings with `ansible`\n  // so instead of using `ansible.ansible.path` use `ansible.path`.\n  \"ansible-language-server\": {\n    \"settings\": {\n      \"ansible\": {\n        \"path\": \"ansible\"\n      },\n      \"executionEnvironment\": {\n        \"enabled\": false\n      },\n      \"python\": {\n        \"interpreterPath\": \"python3\"\n      },\n      \"validation\": {\n        \"enabled\": false, // disable validation\n        \"lint\": {\n          \"enabled\": false, // disable ansible-lint\n          \"path\": \"ansible-lint\"\n        }\n      }\n    }\n  }\n}\n\nA full list of options/settings, that can be passed to the server, can be found at the project's page here.\nFeel free to modify option values as needed.",
  "nav_structure": [
    {
      "text": "Getting Started",
      "href": "../getting-started.html"
    },
    {
      "text": "Getting Started",
      "href": "../getting-started.html"
    },
    {
      "text": "System Requirements",
      "href": "../system-requirements.html"
    },
    {
      "text": "Accounts",
      "href": "../accounts.html"
    },
    {
      "text": "Linux",
      "href": "../linux.html"
    },
    {
      "text": "Windows",
      "href": "../windows.html"
    },
    {
      "text": "Telemetry",
      "href": "../telemetry.html"
    },
    {
      "text": "Workspace Persistence",
      "href": "../workspace-persistence.html"
    },
    {
      "text": "Additional Learning Materials",
      "href": "../additional-learning-materials.html"
    },
    {
      "text": "Configuring Zed",
      "href": "../configuring-zed.html"
    },
    {
      "text": "Configuring Zed",
      "href": "../configuring-zed.html"
    },
    {
      "text": "Configuring Languages",
      "href": "../configuring-languages.html"
    },
    {
      "text": "Key bindings",
      "href": "../key-bindings.html"
    },
    {
      "text": "All Actions",
      "href": "../all-actions.html"
    },
    {
      "text": "Snippets",
      "href": "../snippets.html"
    },
    {
      "text": "Themes",
      "href": "../themes.html"
    },
    {
      "text": "Icon Themes",
      "href": "../icon-themes.html"
    },
    {
      "text": "Visual Customization",
      "href": "../visual-customization.html"
    },
    {
      "text": "Vim Mode",
      "href": "../vim.html"
    },
    {
      "text": "Helix Mode",
      "href": "../helix.html"
    },
    {
      "text": "Multibuffers",
      "href": "../multibuffers.html"
    },
    {
      "text": "Multibuffers",
      "href": "../multibuffers.html"
    },
    {
      "text": "Outline Panel",
      "href": "../outline-panel.html"
    },
    {
      "text": "Code Completions",
      "href": "../completions.html"
    },
    {
      "text": "Channels",
      "href": "../channels.html"
    },
    {
      "text": "Collaboration",
      "href": "../collaboration.html"
    },
    {
      "text": "Git",
      "href": "../git.html"
    },
    {
      "text": "Debugger",
      "href": "../debugger.html"
    },
    {
      "text": "Diagnostics",
      "href": "../diagnostics.html"
    },
    {
      "text": "Tasks",
      "href": "../tasks.html"
    },
    {
      "text": "Remote Development",
      "href": "../remote-development.html"
    },
    {
      "text": "Environment Variables",
      "href": "../environment.html"
    },
    {
      "text": "REPL",
      "href": "../repl.html"
    },
    {
      "text": "Overview",
      "href": "../ai/overview.html"
    },
    {
      "text": "Overview",
      "href": "../ai/overview.html"
    },
    {
      "text": "Agent Panel",
      "href": "../ai/agent-panel.html"
    },
    {
      "text": "Tools",
      "href": "../ai/tools.html"
    },
    {
      "text": "External Agents",
      "href": "../ai/external-agents.html"
    },
    {
      "text": "Inline Assistant",
      "href": "../ai/inline-assistant.html"
    },
    {
      "text": "Edit Prediction",
      "href": "../ai/edit-prediction.html"
    },
    {
      "text": "Text Threads",
      "href": "../ai/text-threads.html"
    },
    {
      "text": "Rules",
      "href": "../ai/rules.html"
    },
    {
      "text": "Model Context Protocol",
      "href": "../ai/mcp.html"
    },
    {
      "text": "Configuration",
      "href": "../ai/configuration.html"
    },
    {
      "text": "LLM Providers",
      "href": "../ai/llm-providers.html"
    },
    {
      "text": "Agent Settings",
      "href": "../ai/agent-settings.html"
    },
    {
      "text": "Subscription",
      "href": "../ai/subscription.html"
    },
    {
      "text": "Plans and Usage",
      "href": "../ai/plans-and-usage.html"
    },
    {
      "text": "Billing",
      "href": "../ai/billing.html"
    },
    {
      "text": "Models",
      "href": "../ai/models.html"
    },
    {
      "text": "Privacy and Security",
      "href": "../ai/privacy-and-security.html"
    },
    {
      "text": "AI Improvement",
      "href": "../ai/ai-improvement.html"
    },
    {
      "text": "Overview",
      "href": "../extensions.html"
    },
    {
      "text": "Overview",
      "href": "../extensions.html"
    },
    {
      "text": "Installing Extensions",
      "href": "../extensions/installing-extensions.html"
    },
    {
      "text": "Developing Extensions",
      "href": "../extensions/developing-extensions.html"
    },
    {
      "text": "Language Extensions",
      "href": "../extensions/languages.html"
    },
    {
      "text": "Debugger Extensions",
      "href": "../extensions/debugger-extensions.html"
    },
    {
      "text": "Theme Extensions",
      "href": "../extensions/themes.html"
    },
    {
      "text": "Icon Theme Extensions",
      "href": "../extensions/icon-themes.html"
    },
    {
      "text": "Slash Command Extensions",
      "href": "../extensions/slash-commands.html"
    },
    {
      "text": "MCP Server Extensions",
      "href": "../extensions/mcp-extensions.html"
    },
    {
      "text": "All Languages",
      "href": "../languages.html"
    },
    {
      "text": "All Languages",
      "href": "../languages.html"
    },
    {
      "text": "Ansible",
      "href": "../languages/ansible.html"
    },
    {
      "text": "AsciiDoc",
      "href": "../languages/asciidoc.html"
    },
    {
      "text": "Astro",
      "href": "../languages/astro.html"
    },
    {
      "text": "Bash",
      "href": "../languages/bash.html"
    },
    {
      "text": "Biome",
      "href": "../languages/biome.html"
    },
    {
      "text": "C",
      "href": "../languages/c.html"
    },
    {
      "text": "C++",
      "href": "../languages/cpp.html"
    },
    {
      "text": "C#",
      "href": "../languages/csharp.html"
    },
    {
      "text": "Clojure",
      "href": "../languages/clojure.html"
    },
    {
      "text": "CSS",
      "href": "../languages/css.html"
    },
    {
      "text": "Dart",
      "href": "../languages/dart.html"
    },
    {
      "text": "Deno",
      "href": "../languages/deno.html"
    },
    {
      "text": "Diff",
      "href": "../languages/diff.html"
    },
    {
      "text": "Docker",
      "href": "../languages/docker.html"
    },
    {
      "text": "Elixir",
      "href": "../languages/elixir.html"
    },
    {
      "text": "Elm",
      "href": "../languages/elm.html"
    },
    {
      "text": "Emmet",
      "href": "../languages/emmet.html"
    },
    {
      "text": "Erlang",
      "href": "../languages/erlang.html"
    },
    {
      "text": "Fish",
      "href": "../languages/fish.html"
    },
    {
      "text": "GDScript",
      "href": "../languages/gdscript.html"
    },
    {
      "text": "Gleam",
      "href": "../languages/gleam.html"
    },
    {
      "text": "GLSL",
      "href": "../languages/glsl.html"
    },
    {
      "text": "Go",
      "href": "../languages/go.html"
    },
    {
      "text": "Groovy",
      "href": "../languages/groovy.html"
    },
    {
      "text": "Haskell",
      "href": "../languages/haskell.html"
    },
    {
      "text": "Helm",
      "href": "../languages/helm.html"
    },
    {
      "text": "HTML",
      "href": "../languages/html.html"
    },
    {
      "text": "Java",
      "href": "../languages/java.html"
    },
    {
      "text": "JavaScript",
      "href": "../languages/javascript.html"
    },
    {
      "text": "Julia",
      "href": "../languages/julia.html"
    },
    {
      "text": "JSON",
      "href": "../languages/json.html"
    },
    {
      "text": "Jsonnet",
      "href": "../languages/jsonnet.html"
    },
    {
      "text": "Kotlin",
      "href": "../languages/kotlin.html"
    },
    {
      "text": "Lua",
      "href": "../languages/lua.html"
    },
    {
      "text": "Luau",
      "href": "../languages/luau.html"
    },
    {
      "text": "Makefile",
      "href": "../languages/makefile.html"
    },
    {
      "text": "Markdown",
      "href": "../languages/markdown.html"
    },
    {
      "text": "Nim",
      "href": "../languages/nim.html"
    },
    {
      "text": "OCaml",
      "href": "../languages/ocaml.html"
    },
    {
      "text": "PHP",
      "href": "../languages/php.html"
    },
    {
      "text": "PowerShell",
      "href": "../languages/powershell.html"
    },
    {
      "text": "Prisma",
      "href": "../languages/prisma.html"
    },
    {
      "text": "Proto",
      "href": "../languages/proto.html"
    },
    {
      "text": "PureScript",
      "href": "../languages/purescript.html"
    },
    {
      "text": "Python",
      "href": "../languages/python.html"
    },
    {
      "text": "R",
      "href": "../languages/r.html"
    },
    {
      "text": "Rego",
      "href": "../languages/rego.html"
    },
    {
      "text": "ReStructuredText",
      "href": "../languages/rst.html"
    },
    {
      "text": "Racket",
      "href": "../languages/racket.html"
    },
    {
      "text": "Roc",
      "href": "../languages/roc.html"
    },
    {
      "text": "Ruby",
      "href": "../languages/ruby.html"
    },
    {
      "text": "Rust",
      "href": "../languages/rust.html"
    },
    {
      "text": "Scala",
      "href": "../languages/scala.html"
    },
    {
      "text": "Scheme",
      "href": "../languages/scheme.html"
    },
    {
      "text": "Shell Script",
      "href": "../languages/sh.html"
    },
    {
      "text": "SQL",
      "href": "../languages/sql.html"
    },
    {
      "text": "Svelte",
      "href": "../languages/svelte.html"
    },
    {
      "text": "Swift",
      "href": "../languages/swift.html"
    },
    {
      "text": "Tailwind CSS",
      "href": "../languages/tailwindcss.html"
    },
    {
      "text": "Terraform",
      "href": "../languages/terraform.html"
    },
    {
      "text": "TOML",
      "href": "../languages/toml.html"
    },
    {
      "text": "TypeScript",
      "href": "../languages/typescript.html"
    },
    {
      "text": "Uiua",
      "href": "../languages/uiua.html"
    },
    {
      "text": "Vue",
      "href": "../languages/vue.html"
    },
    {
      "text": "XML",
      "href": "../languages/xml.html"
    },
    {
      "text": "YAML",
      "href": "../languages/yaml.html"
    },
    {
      "text": "Yara",
      "href": "../languages/yara.html"
    },
    {
      "text": "Yarn",
      "href": "../languages/yarn.html"
    },
    {
      "text": "Zig",
      "href": "../languages/zig.html"
    },
    {
      "text": "Developing Zed",
      "href": "../development.html"
    },
    {
      "text": "Developing Zed",
      "href": "../development.html"
    },
    {
      "text": "macOS",
      "href": "../development/macos.html"
    },
    {
      "text": "Linux",
      "href": "../development/linux.html"
    },
    {
      "text": "Windows",
      "href": "../development/windows.html"
    },
    {
      "text": "FreeBSD",
      "href": "../development/freebsd.html"
    },
    {
      "text": "Local Collaboration",
      "href": "../development/local-collaboration.html"
    },
    {
      "text": "Using Debuggers",
      "href": "../development/debuggers.html"
    },
    {
      "text": "Glossary",
      "href": "../development/glossary.html"
    },
    {
      "text": "Release Process",
      "href": "../development/releases.html"
    },
    {
      "text": "Debugging Crashes",
      "href": "../development/debugging-crashes.html"
    }
  ],
  "page_toc": [],
  "scraped_at": "2025-09-06 14:13:04"
}